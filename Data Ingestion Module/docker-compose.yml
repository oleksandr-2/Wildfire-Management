version: '3.8'

services:
  # Main Application Service
  app:
    image: wildfire-cop-system
    container_name: wildfire-cop-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Expose application API port
    volumes:
      - ./src/python:/app/src/python  # Mount Python source code for development
      - ./config:/app/config  # Mount configuration files
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
    networks:
      - wildfire-network

  # Kafka Service
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - wildfire-network

  # Zookeeper Service
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - wildfire-network

  # PostgreSQL Service
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wildfire-network

volumes:
  postgres_data:

networks:
  wildfire-network:
    driver: bridge


# Start the services with: docker-compose up --build
